<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Ibrahim.Wpf.CustomControls.Controls;assembly=Ibrahim.Wpf.CustomControls"
                    xmlns:converters="clr-namespace:Ibrahim.Wpf.CustomControls.Converters;assembly=Ibrahim.Wpf.CustomControls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Color x:Key="color1" R="87" G="87" B="87" A="255"/>
    <Color x:Key="color2" R="136" G="136" B="136" A="255"/>
    <Color x:Key="color3" R="180" G="180" B="180" A="255"/>
    <Color x:Key="color4" R="224" G="224" B="224" A="255"/>
    <Color x:Key="color5" R="255" G="255" B="255" A="255"/>
    <Color x:Key="error" R="255" G="0" B="0" A="255"/>


    <LinearGradientBrush x:Key="standartBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{StaticResource color4}" Offset="0"/>
        <GradientStop Color="{StaticResource color5}" Offset="1"/>
    </LinearGradientBrush>

    <sys:Double x:Key="standartFontSize">13</sys:Double>
    <FontFamily x:Key="standartFontFamily">Calibri</FontFamily>
    <Thickness x:Key="standartMargin" Top="2" Left="2" Right="2" Bottom="2"/>
    <Thickness x:Key="standartPadding" Top="3" Left="3" Right="3" Bottom="3"/>
    <Thickness x:Key="standartBorderSize" Top="1" Left="1" Right="1" Bottom="1"/>
    <CornerRadius x:Key="standartCornerRadius">5</CornerRadius>
    <converters:HeightDivideTwoToMarginConverter x:Key="heightDivideTwoToMargin"/>
    <converters:HeightToLeftMarginConverter x:Key="heightToMargin"/>

    <Style TargetType="controls:CustomButton" x:Key="button">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color2}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color4}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color3}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="{StaticResource standartBorderSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomButton}">
                    <Border CornerRadius="{StaticResource standartCornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource color1}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource color5}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CustomImageButton" x:Key="imageButton">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color2}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color4}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color5}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>       
        <Setter Property="BorderThickness" Value="{StaticResource standartBorderSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomImageButton}">
                    <Grid>
                        <Border 
                            CornerRadius="{StaticResource standartCornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Height,Converter={StaticResource heightDivideTwoToMargin}}"/>
                        <Ellipse HorizontalAlignment="Left" x:Name="ellipse"
                                 Width="{TemplateBinding Height}">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{StaticResource color2}"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Image Source="{TemplateBinding ImageSource}"
                               Stretch="Uniform"
                               HorizontalAlignment="Left"
                               Margin="{StaticResource standartPadding}"/>
                        <Border Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Height,Converter={StaticResource heightToMargin}}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>                        
                    </Grid>                    

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource color1}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource color5}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetName="ellipse"
                                            Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                            To="{StaticResource color4}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetName="ellipse"
                                            Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CustomTextBlock" x:Key="normalText">
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color1}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CustomTextBlock" x:Key="errorText">
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource error}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CustomOvalButton" x:Key="ovalButton">
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color2}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="{StaticResource standartBorderSize}"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color3}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CustomOvalButton">
                    <Grid>
                        <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                             Stroke="{TemplateBinding BorderBrush}" 
                             StrokeThickness="{TemplateBinding BorderThickness}"
                             Fill="{TemplateBinding Background}"/>
                        <Image Source="{TemplateBinding ImageSource}" Stretch="Uniform"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation    
                            Storyboard.TargetProperty = "(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource color4}" 
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource color1}"
                                                        Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation    
                            Storyboard.TargetProperty = "(Button.Background).(SolidColorBrush.Color)"
                                            To="{x:Null}" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{x:Null}" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CustomBaseForm" x:Key="form">
        <Setter Property="Background" Value="{StaticResource standartBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CustomBaseForm">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <controls:CustomOvalButton Command="ApplicationCommands.Close"
                                                      HorizontalAlignment="Right"
                                                      ImageSource="{TemplateBinding ImageSource}"
                                                      Style="{StaticResource ovalButton}"
                                                      Width="30" Height="30"/>
                        <Border CornerRadius="{StaticResource standartCornerRadius}"
                                Background="{TemplateBinding Background}" Grid.Row="1">
                            <ContentPresenter/>
                        </Border>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="controls:CustomTextBox" x:Key="textBox">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color4}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color1}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color3}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="{StaticResource standartBorderSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomTextBox}">
                    <Border CornerRadius="{StaticResource standartCornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource color5}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource color1}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CustomDataGrid" x:Key="grid">
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource color1}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource color5}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource color4}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource color1}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource color5}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" 
                                                      Margin="{TemplateBinding Padding}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type controls:CustomComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>