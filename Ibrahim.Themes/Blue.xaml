<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Ibrahim.Wpf.CustomControls.Controls;assembly=Ibrahim.Wpf.CustomControls"
                    xmlns:converters="clr-namespace:Ibrahim.Wpf.CustomControls.Converters;assembly=Ibrahim.Wpf.CustomControls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--Renkler koyudan açığa doğru gider-->
    <Color x:Key="color1" R="56" G="70" B="134" A="255"/>
    <!--HoverBorderBrush-->
    <Color x:Key="color2" R="90" G="104" B="168" A="255"/>
    <!--Control Background-->
    <Color x:Key="color3" R="136" G="148" B="203" A="255"/>
    <!--Border-->
    <Color x:Key="color4" R="186" G="194" B="232" A="255"/>
    <!--Gradient 1-->
    <!--Foreground-->
    <!--HoverBackcolor-->
    <Color x:Key="color5" R="234" G="237" B="251" A="255"/>
    <!--Gradiant 2-->
    <Color x:Key="error" R="255" G="0" B="0" A="255"/>


    <LinearGradientBrush x:Key="standartBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{StaticResource color4}" Offset="0"/>
        <GradientStop Color="{StaticResource color5}" Offset="1"/>
    </LinearGradientBrush>

    <sys:Double x:Key="standartFontSize">16</sys:Double>
    <sys:Double x:Key="standartRowHeight">30</sys:Double>
    <FontFamily x:Key="standartFontFamily">Calibri</FontFamily>
    <Thickness x:Key="standartMargin" Top="2" Left="2" Right="2" Bottom="2"/>
    <Thickness x:Key="standartPadding" Top="5" Left="5" Right="5" Bottom="5"/>
    <Thickness x:Key="standartBorderSize" Top="1" Left="1" Right="1" Bottom="1"/>
    <CornerRadius x:Key="standartCornerRadius">4</CornerRadius>
    <VerticalAlignment x:Key="errorTextVerticalAlignment">Center</VerticalAlignment>
    <converters:HeightDivideTwoToMarginConverter x:Key="heightDivideTwoToMargin"/>
    <converters:HeightToLeftMarginConverter x:Key="heightToMargin"/>

    <!--Button-->
    
    <Style TargetType="controls:CustomButton" x:Key="button">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color2}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color4}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color3}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="{StaticResource standartBorderSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomButton}">
                    <Border CornerRadius="{StaticResource standartCornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource color1}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource color5}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--ImageButton-->

    <Style TargetType="controls:CustomImageButton" x:Key="imageButton">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color2}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color4}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color5}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="BorderThickness" Value="{StaticResource standartBorderSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomImageButton}">
                    <Grid>
                        <Border 
                            CornerRadius="{StaticResource standartCornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Height,Converter={StaticResource heightDivideTwoToMargin}}"/>
                        <Ellipse HorizontalAlignment="Left" x:Name="ellipse"
                                 Width="{TemplateBinding Height}">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{StaticResource color2}"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Image Source="{TemplateBinding ImageSource}"
                               Stretch="Uniform"
                               HorizontalAlignment="Left"
                               Margin="{StaticResource standartPadding}"/>
                        <Border Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Height,Converter={StaticResource heightToMargin}}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource color1}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource color5}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetName="ellipse"
                                            Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                            To="{StaticResource color4}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetName="ellipse"
                                            Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--TextBlock-->

    <Style TargetType="controls:CustomTextBlock" x:Key="normalText">
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color1}"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--TextBlock-->

    <Style TargetType="controls:CustomTextBlock" x:Key="errorText">
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="VerticalAlignment" Value="{StaticResource errorTextVerticalAlignment}"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource error}"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--OvalButton-->

    <Style TargetType="controls:CustomOvalButton" x:Key="ovalButton">
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color2}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="{StaticResource standartBorderSize}"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color3}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CustomOvalButton">
                    <Grid>
                        <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                             Stroke="{TemplateBinding BorderBrush}" 
                             StrokeThickness="{TemplateBinding BorderThickness}"
                             Fill="{TemplateBinding Background}"/>
                        <Image Source="{TemplateBinding ImageSource}" Stretch="Uniform"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation    
                            Storyboard.TargetProperty = "(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource color4}" 
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{StaticResource color1}"
                                                        Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation    
                            Storyboard.TargetProperty = "(Button.Background).(SolidColorBrush.Color)"
                                            To="{x:Null}" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{x:Null}" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Form-->

    <Style TargetType="controls:CustomBaseForm" x:Key="form">
        <Setter Property="Background" Value="{StaticResource standartBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CustomBaseForm">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <controls:CustomOvalButton Command="ApplicationCommands.Close"
                                                      HorizontalAlignment="Right"
                                                      ImageSource="{TemplateBinding ImageSource}"
                                                      Style="{StaticResource ovalButton}"
                                                      Width="30" Height="30"/>
                        <Border CornerRadius="{StaticResource standartCornerRadius}"
                                Background="{TemplateBinding Background}" Grid.Row="1">
                            <ContentPresenter/>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--TextBox-->

    <Style TargetType="controls:CustomTextBox" x:Key="textBox">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color4}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color1}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource standartFontFamily}"/>
        <Setter Property="Margin" Value="{StaticResource standartMargin}"/>
        <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color3}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="{StaticResource standartBorderSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomTextBox}">
                    <Border CornerRadius="{StaticResource standartCornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource color5}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource color1}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                            To="{x:Null}"
                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--DataGrid-->

    <Style TargetType="controls:CustomDataGrid" x:Key="grid">
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="RowHeight" Value="{StaticResource standartRowHeight}"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource color1}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource color5}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource color4}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource color1}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource color5}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Padding" Value="{StaticResource standartPadding}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" 
                                                      Margin="{TemplateBinding Padding}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              CornerRadius="{StaticResource standartCornerRadius}" BorderThickness="{StaticResource standartBorderSize}" >
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource color2}"/>
                </Border.Background>
            </Border>
            <Border Grid.Column="1" Margin="{StaticResource standartMargin}" Name="ButtonBorder"
              CornerRadius="{StaticResource standartCornerRadius}" BorderThickness="{StaticResource standartBorderSize}" >
                <Border.BorderBrush>
                    <SolidColorBrush Color="{StaticResource color1}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource color2}"/>
                </Border.Background>
            </Border>

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
                <Path.Fill>
                    <SolidColorBrush Color="{StaticResource color3}"/>
                </Path.Fill>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource color1}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource color1}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="Arrow">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource color4}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="comboBox"  TargetType="{x:Type controls:CustomComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource standartFontSize}"/>
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource color5}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False" 
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden" Background="Transparent"
                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                 Focusable="True">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                               Focusable="False" AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Margin="0, 1, 0, 0"
                                        CornerRadius="0" BorderThickness="1,1,1,1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{StaticResource color4}"/>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource color1}"/>
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource color3}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    



</ResourceDictionary>